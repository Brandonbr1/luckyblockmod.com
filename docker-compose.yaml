version: '3.5'

services:
    build:
        build:
            context: .
            target: build-client
            dockerfile: Dockerfile
        image: build
        container_name: build
        environment:
            - NODE_ENV=production
        volumes:
            - ./server/src:/app/server/src
            - ./server/tsconfig.json:/app/server/tsconfig.json
            - ./server/package.json:/app/server/package.json
            - ./server/dist:/app/server/dist
            - ./client/src:/app/client/src
            - ./client/build.ts:/app/client/build.ts
            - ./client/tsconfig.json:/app/client/tsconfig.json
            - ./client/package.json:/app/client/package.json
            - ./client/dist:/app/client/dist
            - ./docs/src:/app/docs/src
            - ./docs/build.ts:/app/docs/build.ts
            - ./docs/tsconfig.json:/app/docs/tsconfig.json
            - ./docs/package.json:/app/docs/package.json
            - ./docs/dist:/app/docs/dist
            - ./package.json:/app/package.json
        command: npm run build

    app:
        build:
            context: .
            target: run-server
            dockerfile: Dockerfile
        image: app
        container_name: app
        restart: unless-stopped
        ports:
            - 8080:8080
        environment:
            - NODE_ENV=production
        networks:
            - app-network
        volumes:
            - ./server/dist:/app/server/dist
            - ./client/dist:/app/client/dist
            - ./client/src/:/app/client/src
            - ./client/static:/app/client/static
            - ./docs/dist:/app/docs/dist
            - ./server/package.json:/app/server/package.json
            - ../luckyblock-dist:/luckyblock-dist
        command: npm run start-cluster

    webserver:
        image: nginx:mainline-alpine
        container_name: webserver
        restart: unless-stopped
        depends_on:
            - app
        ports:
            - '80:80'
            - '443:443'
        networks:
            - app-network
        volumes:
            - ./server/nginx-conf/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./server/dhparam:/etc/ssl/certs
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt

    # use this when testing locally, and on the initial deploy (before certbot enables https)
    webserver-http:
        image: nginx:mainline-alpine
        container_name: webserver-http
        depends_on:
            - app
        ports:
            - '80:80'
        networks:
            - app-network
        volumes:
            - ./nginx-conf/nginx-http.conf:/etc/nginx/conf.d/default.conf

    certbot:
        image: certbot/certbot
        container_name: certbot
        depends_on:
            # - webserver-http # use this on the initial deploy
            - webserver
        volumes:
            - ./public:/var/www/html
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
        command: certonly --webroot --webroot-path=/var/www/html --email admin@luckyblockmod.com --agree-tos --no-eff-email --force-renewal -d luckyblockmod.com -d www.luckyblockmod.com

volumes:
    certbot-etc:
    certbot-var:

networks:
    app-network:
        driver: bridge
